!(function (t) { const e = {}; function i(n) { if (e[n]) return e[n].exports; const r = e[n] = { i: n, l: !1, exports: {} }; return t[n].call(r.exports, r, r.exports, i), r.l = !0, r.exports; }i.m = t, i.c = e, i.d = function (t, e, n) { i.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: n }); }, i.r = function (t) { typeof Symbol !== 'undefined' && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(t, '__esModule', { value: !0 }); }, i.t = function (t, e) { if (1 & e && (t = i(t)), 8 & e) return t; if (4 & e && typeof t === 'object' && t && t.__esModule) return t; const n = Object.create(null); if (i.r(n), Object.defineProperty(n, 'default', { enumerable: !0, value: t }), 2 & e && typeof t !== 'string') for (const r in t)i.d(n, r, ((e) => t[e]).bind(null, r)); return n; }, i.n = function (t) { const e = t && t.__esModule ? function () { return t.default; } : function () { return t; }; return i.d(e, 'a', e), e; }, i.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e); }, i.p = '', i(i.s = 0); }([function (module, exports) {
  function _createForOfIteratorHelper(t, e) {
    let i; if (typeof Symbol === 'undefined' || t[Symbol.iterator] == null) {
      if (Array.isArray(t) || (i = _unsupportedIterableToArray(t)) || e && t && typeof t.length === 'number') {
        i && (t = i); let n = 0; const r = function () {}; return {
          s: r, n() { return n >= t.length ? { done: !0 } : { done: !1, value: t[n++] }; }, e(t) { throw t; }, f: r,
        };
      } throw new TypeError('Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
    } let s; let o = !0; let a = !1; return {
      s() { i = t[Symbol.iterator](); }, n() { const t = i.next(); return o = t.done, t; }, e(t) { a = !0, s = t; }, f() { try { o || i.return == null || i.return(); } finally { if (a) throw s; } },
    };
  } function _unsupportedIterableToArray(t, e) { if (t) { if (typeof t === 'string') return _arrayLikeToArray(t, e); let i = Object.prototype.toString.call(t).slice(8, -1); return i === 'Object' && t.constructor && (i = t.constructor.name), i === 'Map' || i === 'Set' ? Array.from(t) : i === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray(t, e) : void 0; } } function _arrayLikeToArray(t, e) { (e == null || e > t.length) && (e = t.length); for (var i = 0, n = new Array(e); i < e; i++)n[i] = t[i]; return n; }!(function () { function dQuiz() { const container = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : '.dquiz'; const options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; if (this.container = document.querySelector(container), !this.container) return !1; function maskInput() { const t = this.dataset.mask; const e = this.value; const i = /[0\*]/; const n = /[0-9]/; let r = ''; try { for (let s = t.length, o = 0, a = 0; a < s && !(a >= e.length) && (t[a] !== '0' || e[o].match(n) !== null);) { for (;t[a].match(i) === null && e[o] !== t[a];)r += t[a++]; r += e[o++], a++; } this.value = r; } catch (t) { console.log(t); } } this.btnNext = this.container.querySelector('.dquiz-btn_next[type=button]'), this.btnPrev = this.container.querySelector('.dquiz-btn_prev[type=button]'), this.currentSlide = 0, this.allSlides = this.container.querySelectorAll('.dquiz-question'), this.slider = this.container.querySelector('.dquiz__slider'), this.sliderWrap = this.container.querySelector('.dquiz__slider-wrap'), this.countQuestion = this.container.querySelectorAll('.dquiz-question').length, this.progressLine = this.container.querySelector('.dquiz-progress__line span'), this.progressCount = this.container.querySelector('.dquiz-progress__count'), this.maskedInputs = this.container.querySelectorAll('[data-mask]'), this.finish = this.container.querySelector('.dquiz-finish'), this.prev = function () { this.currentSlide > 0 && (this.currentSlide--, this.sliderWrap.style.transform = 'translateX('.concat(-this.currentSlide * this.slider.clientWidth, 'px)'), this.duringSlide()); }, this.next = function () { this.currentSlide < this.countQuestion - 1 ? (this.currentSlide++, this.currentSlide > 0 && (this.sliderWrap.style.transform = 'translateX('.concat(-this.currentSlide * this.slider.clientWidth, 'px)')), this.duringSlide()) : (this.progress(100), this.getNote(), this.showFinish(), this.reachGoalYandex(this.currentSlide + 1)); }, this.disableBtnPrev = function () { this.currentSlide === 0 ? this.btnPrev.disabled = !0 : this.btnPrev.disabled = !1; }, this.disableBtnNext = function () { this.checkInput() ? this.btnNext.disabled = !1 : this.btnNext.disabled = !0; }, this.checkInput = function () { let t = !1; switch (this.getTypeQuestion()) { case 'checkbox': this.allSlides[this.currentSlide].querySelectorAll('input[type=checkbox]').forEach(((e) => { e.checked && (t = !0); })); break; case 'radio': this.allSlides[this.currentSlide].querySelectorAll('input[type=radio]').forEach(((e) => { e.checked && (t = !0); })); } return t; }, this.scrollTopSlider = function () { this.slider.scrollTo(0, 0); }, this.getNote = function () { let t; let e = ''; const i = _createForOfIteratorHelper(this.allSlides); try { for (i.s(); !(t = i.n()).done;) { const n = t.value; switch (e += `Вопрос: ${n.querySelector('.dquiz-question__title-text').innerHTML}\nОтвет: `, n.getAttribute('data-type')) { case 'checkbox': n.querySelectorAll('input[type=checkbox]:checked').forEach(((t) => { e += `${t.getAttribute('value')}, `; })); break; case 'radio': var r = n.querySelector('input[type=radio]:checked'); e += `${r.getAttribute('value')}, `; }e += '\n\n'; } } catch (t) { i.e(t); } finally { i.f(); } this.container.querySelector('.dquiz-note').value = e; }, this.showFinish = function () { this.finish.classList.add('dquiz-finish_active'), this.container.classList.add('dquiz-overflow-hidden'), this.btnPrev.disabled = !0, this.btnNext.disabled = !0; }, this.getTypeQuestion = function () { return this.allSlides[this.currentSlide].getAttribute('data-type'); }, this.duringSlide = function () { this.disableBtnPrev(), this.disableBtnNext(), this.progress(), this.addActiveClass(), this.scrollTopSlider(), this.reachGoalYandex(this.currentSlide); }, this.reachGoalYandex = function (currentSlide) { void 0 !== window[`yaCounter${options == null ? void 0 : options.yaMetrika}`] && eval('yaCounter'.concat(options == null ? void 0 : options.yaMetrika, ".reachGoal('step").concat(currentSlide, "')")); }, this.addActiveClass = function () { for (let t = 0; t < this.allSlides.length; t++) this.allSlides[t].classList.remove('dquiz-slide-active'); this.allSlides[this.currentSlide].classList.add('dquiz-slide-active'); }, this.autoHeight = function () { this.sliderWrap.style.height = `${this.allSlides[this.currentSlide].offsetHeight}px`; }, this.init = function () { this.disableBtnPrev(), this.disableBtnNext(), this.addEventChange(), this.addEventClickBtnModal(), this.addEventClickBtnModalClouse(), this.progress(), this.addPhoneMask(), this.submitFrom(), this.addActiveClass(); }, this.addEventChange = function () { for (let t = this.container.querySelectorAll('input:not([type=text])'), e = 0; e < t.length; e++)t[e].addEventListener('change', this.eventChange.bind(this)); }, this.addEventClickBtnModal = function () { for (let t = document.querySelectorAll('[data-dquiz-modal-target]'), e = 0; e < t.length; e++)t[e].addEventListener('click', this.eventShowModal); }, this.eventShowModal = function (t) { const e = this.getAttribute('data-dquiz-modal-target'); document.querySelector('[data-dquiz-modal='.concat(e, ']')).classList.add('dquiz-show'), document.getElementsByTagName('body')[0].classList.add('dquiz-is-locked'); }, this.addEventClickBtnModalClouse = function () { for (let t = document.querySelectorAll('[data-dquiz-modal-clouse]'), e = 0; e < t.length; e++)t[e].addEventListener('click', this.eventClouseModal); }, this.eventClouseModal = function (t) { const e = this.getAttribute('data-dquiz-modal-clouse'); document.querySelector('[data-dquiz-modal='.concat(e, ']')).classList.remove('dquiz-show'), document.getElementsByTagName('body')[0].classList.remove('dquiz-is-locked'); }, this.eventChange = function () { this.disableBtnNext(); }, this.responsive = function () { this.sliderWrap.style.transform = 'translateX('.concat(-this.currentSlide * this.slider.clientWidth, 'px)'); }, this.progress = function () { const t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]; const e = t || 100 * this.currentSlide / this.countQuestion; this.progressLine.style.width = `${e}%`, this.progressCount.innerHTML = `${Math.floor(e)}%`; }, this.addPhoneMask = function () { for (let t = 0; t < this.maskedInputs.length; t++) this.maskedInputs[t].addEventListener('input', maskInput); }, this.submitFrom = function () { const form = this.container.querySelector('form'); form.addEventListener('submit', (function (event) { void 0 !== window[`yaCounter${options == null ? void 0 : options.yaMetrika}`] && eval('yaCounter'.concat(options == null ? void 0 : options.yaMetrika, ".reachGoal('finish_step')")); const buttonSubmit = this.querySelector('button[type=submit]'); buttonSubmit.disabled = !0, buttonSubmit.innerHTML = '<svg version="1.1" id="L2" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n  viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">\n<circle fill="none" stroke="#fff" stroke-width="4" stroke-miterlimit="10" cx="50" cy="50" r="48"/>\n<line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="85" y2="50.5">\n  <animateTransform\n\t\t  attributeName="transform"\n\t\t  dur="2s"\n\t\t  type="rotate"\n\t\t  from="0 50 50"\n\t\t  to="360 50 50"\n\t\t  repeatCount="indefinite" />\n</line>\n<line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="49.5" y2="74">\n  <animateTransform\n\t\t  attributeName="transform"\n\t\t  dur="15s"\n\t\t  type="rotate"\n\t\t  from="0 50 50"\n\t\t  to="360 50 50"\n\t\t  repeatCount="indefinite" />\n</line>\n</svg> Подождите...'; })); }, this.init(), this.btnPrev.addEventListener('click', this.prev.bind(this)), this.btnNext.addEventListener('click', this.next.bind(this)), window.addEventListener('resize', this.responsive.bind(this)); }window.dQuiz = dQuiz; }());
}]));
